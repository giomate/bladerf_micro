-- -------------------------------------------------------------
-- 
-- File Name: D:\Salukat\Development\Software\Quartus\BladeRF\hdl\fpga\ip\salukat\max_frequency\vhdl\max_frequency\index2frequency.vhd
-- Created: 2020-12-29 17:32:44
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: index2frequency
-- Source Path: max_frequency/max_frequency/frequency_max/index2frequency
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY index2frequency IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_32_1                        :   IN    std_logic;
        enb                               :   IN    std_logic;
        Enable                            :   IN    std_logic;
        index_max                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Out1                              :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
        );
END index2frequency;


ARCHITECTURE rtl OF index2frequency IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT fmax_calculation
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_32_1                      :   IN    std_logic;
          enb                             :   IN    std_logic;
          index                           :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          f_step                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Enable                          :   IN    std_logic;
          Out1                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : fmax_calculation
    USE ENTITY work.fmax_calculation(rtl);

  -- Signals
  SIGNAL frequency_step_out1              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL fmax_calculation_out1            : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_fmax_calculation : fmax_calculation
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_32_1 => enb_1_32_1,
              enb => enb,
              index => index_max,  -- uint32
              f_step => std_logic_vector(frequency_step_out1),  -- uint32
              Enable => Enable,
              Out1 => fmax_calculation_out1  -- uint32
              );

  frequency_step_out1 <= to_unsigned(32258, 32);

  Out1 <= fmax_calculation_out1;

END rtl;

