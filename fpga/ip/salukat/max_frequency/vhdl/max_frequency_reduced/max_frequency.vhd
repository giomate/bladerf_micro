-- -------------------------------------------------------------
-- 
-- File Name: D:\Salukat\Development\Software\Quartus\BladeRF\hdl\fpga\ip\salukat\max_frequency\vhdl\max_frequency_reduced\max_frequency.vhd
-- Created: 2020-12-29 12:17:31
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-06
-- Target subsystem base rate: 1e-06
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1.6e-05
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- valid                         ce_out        1.6e-05
-- fft_data_re                   ce_out        1.6e-05
-- fft_data_im                   ce_out        1.6e-05
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: max_frequency
-- Source Path: max_frequency_reduced/max_frequency
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.max_frequency_pkg.ALL;

ENTITY max_frequency IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        rx_in_re                          :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        rx_in_im                          :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        ce_out                            :   OUT   std_logic;
        valid                             :   OUT   std_logic;
        fft_data_re                       :   OUT   vector_of_std_logic_vector12(0 TO 15);  -- sfix12 [16]
        fft_data_im                       :   OUT   vector_of_std_logic_vector12(0 TO 15)  -- sfix12 [16]
        );
END max_frequency;


ARCHITECTURE rtl OF max_frequency IS

  -- Component Declarations
  COMPONENT max_frequency_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_16_0                      :   OUT   std_logic;
          enb_1_16_1                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT serial2parallel
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          S_re                            :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
          S_im                            :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
          P_re                            :   OUT   vector_of_std_logic_vector12(0 TO 15);  -- sfix12 [16]
          P_im                            :   OUT   vector_of_std_logic_vector12(0 TO 15);  -- sfix12 [16]
          ValidOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FFT_streamer
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          In1_re                          :   IN    vector_of_std_logic_vector12(0 TO 15);  -- sfix12 [16]
          In1_im                          :   IN    vector_of_std_logic_vector12(0 TO 15);  -- sfix12 [16]
          In2                             :   IN    std_logic;
          fft_data_re                     :   OUT   vector_of_std_logic_vector12(0 TO 15);  -- sfix12 [16]
          fft_data_im                     :   OUT   vector_of_std_logic_vector12(0 TO 15);  -- sfix12 [16]
          valid                           :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : max_frequency_tc
    USE ENTITY work.max_frequency_tc(rtl);

  FOR ALL : serial2parallel
    USE ENTITY work.serial2parallel(rtl);

  FOR ALL : FFT_streamer
    USE ENTITY work.FFT_streamer(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_16_0                       : std_logic;
  SIGNAL enb_1_16_1                       : std_logic;
  SIGNAL serial2parallel_out1_re          : vector_of_std_logic_vector12(0 TO 15);  -- ufix12 [16]
  SIGNAL serial2parallel_out1_im          : vector_of_std_logic_vector12(0 TO 15);  -- ufix12 [16]
  SIGNAL serial2parallel_out2             : std_logic;
  SIGNAL FFT_streamer_out1_re             : vector_of_std_logic_vector12(0 TO 15);  -- ufix12 [16]
  SIGNAL FFT_streamer_out1_im             : vector_of_std_logic_vector12(0 TO 15);  -- ufix12 [16]
  SIGNAL FFT_streamer_out2                : std_logic;

BEGIN
  u_max_frequency_tc : max_frequency_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb => enb,
              enb_1_16_0 => enb_1_16_0,
              enb_1_16_1 => enb_1_16_1
              );

  u_serial2parallel : serial2parallel
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              S_re => rx_in_re,  -- sfix12
              S_im => rx_in_im,  -- sfix12
              P_re => serial2parallel_out1_re,  -- sfix12 [16]
              P_im => serial2parallel_out1_im,  -- sfix12 [16]
              ValidOut => serial2parallel_out2
              );

  u_FFT_streamer : FFT_streamer
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              In1_re => serial2parallel_out1_re,  -- sfix12 [16]
              In1_im => serial2parallel_out1_im,  -- sfix12 [16]
              In2 => serial2parallel_out2,
              fft_data_re => FFT_streamer_out1_re,  -- sfix12 [16]
              fft_data_im => FFT_streamer_out1_im,  -- sfix12 [16]
              valid => FFT_streamer_out2
              );

  valid <= FFT_streamer_out2;

  ce_out <= enb_1_16_1;

  fft_data_re <= FFT_streamer_out1_re;

  fft_data_im <= FFT_streamer_out1_im;

END rtl;

