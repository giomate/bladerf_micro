// sensor_reader.v

// Generated using ACDS version 20.1 711

`timescale 1 ps / 1 ps
module sensor_reader (
		input  wire        clk_clk,                                    //                                 clk.clk
		input  wire        reset_reset_n,                              //                               reset.reset_n
		input  wire        spin_sensor_receiver_0_data_if_rx_clk_p,    //      spin_sensor_receiver_0_data_if.rx_clk_p
		input  wire        spin_sensor_receiver_0_data_if_frame_p,     //                                    .frame_p
		input  wire [5:0]  spin_sensor_receiver_0_data_if_data_p,      //                                    .data_p
		input  wire [5:0]  spin_sensor_receiver_0_data_if_data_n,      //                                    .data_n
		input  wire        spin_sensor_receiver_0_data_if_frame_n,     //                                    .frame_n
		input  wire        spin_sensor_receiver_0_data_if_rx_clk_n,    //                                    .rx_clk_n
		output wire        spin_sensor_receiver_0_data_if_tc_clk,      //                                    .tc_clk
		output wire        spin_sensor_receiver_0_data_if_tx_clk,      //                                    .tx_clk
		output wire [11:0] spin_sensor_receiver_0_iq_data_out_re_data, //  spin_sensor_receiver_0_iq_data_out.re_data
		output wire [11:0] spin_sensor_receiver_0_iq_data_out_im_data, //                                    .im_data
		output wire        spin_sensor_receiver_0_reset_source_reset,  // spin_sensor_receiver_0_reset_source.reset
		input  wire        spin_sensor_receiver_0_s_axi_awvalid,       //        spin_sensor_receiver_0_s_axi.awvalid
		input  wire [15:0] spin_sensor_receiver_0_s_axi_awaddr,        //                                    .awaddr
		input  wire [2:0]  spin_sensor_receiver_0_s_axi_awprot,        //                                    .awprot
		output wire        spin_sensor_receiver_0_s_axi_awready,       //                                    .awready
		input  wire        spin_sensor_receiver_0_s_axi_wvalid,        //                                    .wvalid
		input  wire [31:0] spin_sensor_receiver_0_s_axi_wdata,         //                                    .wdata
		input  wire [3:0]  spin_sensor_receiver_0_s_axi_wstrb,         //                                    .wstrb
		output wire        spin_sensor_receiver_0_s_axi_wready,        //                                    .wready
		output wire        spin_sensor_receiver_0_s_axi_bvalid,        //                                    .bvalid
		output wire [1:0]  spin_sensor_receiver_0_s_axi_bresp,         //                                    .bresp
		input  wire        spin_sensor_receiver_0_s_axi_bready,        //                                    .bready
		input  wire        spin_sensor_receiver_0_s_axi_arvalid,       //                                    .arvalid
		input  wire [15:0] spin_sensor_receiver_0_s_axi_araddr,        //                                    .araddr
		input  wire [2:0]  spin_sensor_receiver_0_s_axi_arprot,        //                                    .arprot
		output wire        spin_sensor_receiver_0_s_axi_arready,       //                                    .arready
		output wire        spin_sensor_receiver_0_s_axi_rvalid,        //                                    .rvalid
		output wire [31:0] spin_sensor_receiver_0_s_axi_rdata,         //                                    .rdata
		output wire [1:0]  spin_sensor_receiver_0_s_axi_rresp,         //                                    .rresp
		input  wire        spin_sensor_receiver_0_s_axi_rready         //                                    .rready
	);

	wire    spin_sensor_receiver_0_clk_out_clk; // spin_sensor_receiver_0:l_clk_out -> spin_sensor_receiver_0:clk_in
	wire    rst_controller_reset_out_reset;     // rst_controller:reset_out -> spin_sensor_receiver_0:s_axi_aresetn

	spin_sensor_top #(
		.FPGA_TECHNOLOGY ("CYCLONE5")
	) spin_sensor_receiver_0 (
		.s_axi_aclk    (clk_clk),                                    //  s_axi_clock.clk
		.s_axi_aresetn (~rst_controller_reset_out_reset),            //  s_axi_reset.reset_n
		.rx_clk_p_in   (spin_sensor_receiver_0_data_if_rx_clk_p),    //      data_if.rx_clk_p
		.frame_p_in    (spin_sensor_receiver_0_data_if_frame_p),     //             .frame_p
		.data_p_in     (spin_sensor_receiver_0_data_if_data_p),      //             .data_p
		.data_n_in     (spin_sensor_receiver_0_data_if_data_n),      //             .data_n
		.frame_n_in    (spin_sensor_receiver_0_data_if_frame_n),     //             .frame_n
		.rx_clk_n_in   (spin_sensor_receiver_0_data_if_rx_clk_n),    //             .rx_clk_n
		.tx_clk_p_out  (spin_sensor_receiver_0_data_if_tc_clk),      //             .tc_clk
		.tx_clk_n_out  (spin_sensor_receiver_0_data_if_tx_clk),      //             .tx_clk
		.re_data_out   (spin_sensor_receiver_0_iq_data_out_re_data), //  iq_data_out.re_data
		.im_data_out   (spin_sensor_receiver_0_iq_data_out_im_data), //             .im_data
		.l_clk_out     (spin_sensor_receiver_0_clk_out_clk),         //      clk_out.clk
		.rst_out       (spin_sensor_receiver_0_reset_source_reset),  // reset_source.reset
		.clk_in        (spin_sensor_receiver_0_clk_out_clk),         // device_clock.clk
		.s_axi_awvalid (spin_sensor_receiver_0_s_axi_awvalid),       //        s_axi.awvalid
		.s_axi_awaddr  (spin_sensor_receiver_0_s_axi_awaddr),        //             .awaddr
		.s_axi_awprot  (spin_sensor_receiver_0_s_axi_awprot),        //             .awprot
		.s_axi_awready (spin_sensor_receiver_0_s_axi_awready),       //             .awready
		.s_axi_wvalid  (spin_sensor_receiver_0_s_axi_wvalid),        //             .wvalid
		.s_axi_wdata   (spin_sensor_receiver_0_s_axi_wdata),         //             .wdata
		.s_axi_wstrb   (spin_sensor_receiver_0_s_axi_wstrb),         //             .wstrb
		.s_axi_wready  (spin_sensor_receiver_0_s_axi_wready),        //             .wready
		.s_axi_bvalid  (spin_sensor_receiver_0_s_axi_bvalid),        //             .bvalid
		.s_axi_bresp   (spin_sensor_receiver_0_s_axi_bresp),         //             .bresp
		.s_axi_bready  (spin_sensor_receiver_0_s_axi_bready),        //             .bready
		.s_axi_arvalid (spin_sensor_receiver_0_s_axi_arvalid),       //             .arvalid
		.s_axi_araddr  (spin_sensor_receiver_0_s_axi_araddr),        //             .araddr
		.s_axi_arprot  (spin_sensor_receiver_0_s_axi_arprot),        //             .arprot
		.s_axi_arready (spin_sensor_receiver_0_s_axi_arready),       //             .arready
		.s_axi_rvalid  (spin_sensor_receiver_0_s_axi_rvalid),        //             .rvalid
		.s_axi_rdata   (spin_sensor_receiver_0_s_axi_rdata),         //             .rdata
		.s_axi_rresp   (spin_sensor_receiver_0_s_axi_rresp),         //             .rresp
		.s_axi_rready  (spin_sensor_receiver_0_s_axi_rready)         //             .rready
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                 // reset_in0.reset
		.clk            (clk_clk),                        //       clk.clk
		.reset_out      (rst_controller_reset_out_reset), // reset_out.reset
		.reset_req      (),                               // (terminated)
		.reset_req_in0  (1'b0),                           // (terminated)
		.reset_in1      (1'b0),                           // (terminated)
		.reset_req_in1  (1'b0),                           // (terminated)
		.reset_in2      (1'b0),                           // (terminated)
		.reset_req_in2  (1'b0),                           // (terminated)
		.reset_in3      (1'b0),                           // (terminated)
		.reset_req_in3  (1'b0),                           // (terminated)
		.reset_in4      (1'b0),                           // (terminated)
		.reset_req_in4  (1'b0),                           // (terminated)
		.reset_in5      (1'b0),                           // (terminated)
		.reset_req_in5  (1'b0),                           // (terminated)
		.reset_in6      (1'b0),                           // (terminated)
		.reset_req_in6  (1'b0),                           // (terminated)
		.reset_in7      (1'b0),                           // (terminated)
		.reset_req_in7  (1'b0),                           // (terminated)
		.reset_in8      (1'b0),                           // (terminated)
		.reset_req_in8  (1'b0),                           // (terminated)
		.reset_in9      (1'b0),                           // (terminated)
		.reset_req_in9  (1'b0),                           // (terminated)
		.reset_in10     (1'b0),                           // (terminated)
		.reset_req_in10 (1'b0),                           // (terminated)
		.reset_in11     (1'b0),                           // (terminated)
		.reset_req_in11 (1'b0),                           // (terminated)
		.reset_in12     (1'b0),                           // (terminated)
		.reset_req_in12 (1'b0),                           // (terminated)
		.reset_in13     (1'b0),                           // (terminated)
		.reset_req_in13 (1'b0),                           // (terminated)
		.reset_in14     (1'b0),                           // (terminated)
		.reset_req_in14 (1'b0),                           // (terminated)
		.reset_in15     (1'b0),                           // (terminated)
		.reset_req_in15 (1'b0)                            // (terminated)
	);

endmodule
