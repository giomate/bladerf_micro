// i2c_si53304.v

// Generated using ACDS version 20.1 711

`timescale 1 ps / 1 ps
module i2c_si53304 (
		input  wire  bladerf_oc_i2c_master_0_clock_sink_clk,           //  bladerf_oc_i2c_master_0_clock_sink.clk
		output wire  bladerf_oc_i2c_master_0_conduit_end_scl_pad_o,    // bladerf_oc_i2c_master_0_conduit_end.scl_pad_o
		output wire  bladerf_oc_i2c_master_0_conduit_end_scl_padoen_o, //                                    .scl_padoen_o
		input  wire  bladerf_oc_i2c_master_0_conduit_end_sda_pad_i,    //                                    .sda_pad_i
		output wire  bladerf_oc_i2c_master_0_conduit_end_sda_pad_o,    //                                    .sda_pad_o
		output wire  bladerf_oc_i2c_master_0_conduit_end_sda_padoen_o, //                                    .sda_padoen_o
		input  wire  bladerf_oc_i2c_master_0_conduit_end_arst_i,       //                                    .arst_i
		input  wire  bladerf_oc_i2c_master_0_conduit_end_scl_pad_i,    //                                    .scl_pad_i
		input  wire  bladerf_oc_i2c_master_0_reset_sink_reset          //  bladerf_oc_i2c_master_0_reset_sink.reset
	);

	i2c_master_top #(
		.ARST_LVL (1)
	) bladerf_oc_i2c_master_0 (
		.wb_clk_i     (bladerf_oc_i2c_master_0_clock_sink_clk),           //            clock_sink.clk
		.wb_rst_i     (bladerf_oc_i2c_master_0_reset_sink_reset),         //            reset_sink.reset
		.scl_pad_o    (bladerf_oc_i2c_master_0_conduit_end_scl_pad_o),    //           conduit_end.scl_pad_o
		.scl_padoen_o (bladerf_oc_i2c_master_0_conduit_end_scl_padoen_o), //                      .scl_padoen_o
		.sda_pad_i    (bladerf_oc_i2c_master_0_conduit_end_sda_pad_i),    //                      .sda_pad_i
		.sda_pad_o    (bladerf_oc_i2c_master_0_conduit_end_sda_pad_o),    //                      .sda_pad_o
		.sda_padoen_o (bladerf_oc_i2c_master_0_conduit_end_sda_padoen_o), //                      .sda_padoen_o
		.arst_i       (bladerf_oc_i2c_master_0_conduit_end_arst_i),       //                      .arst_i
		.scl_pad_i    (bladerf_oc_i2c_master_0_conduit_end_scl_pad_i),    //                      .scl_pad_i
		.wb_inta_o    (),                                                 //      interrupt_sender.irq
		.wb_dat_i     (),                                                 // bladerf_oc_i2c_master.writedata
		.wb_dat_o     (),                                                 //                      .readdata
		.wb_we_i      (),                                                 //                      .write
		.wb_stb_i     (),                                                 //                      .byteenable
		.wb_cyc_i     (),                                                 //                      .chipselect
		.wb_ack_o     (),                                                 //                      .waitrequest_n
		.wb_adr_i     ()                                                  //                      .address
	);

endmodule
